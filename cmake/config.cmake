FUNCTION(GEN_CONF)
    # Set ALCP Release Version String
    STRING(TIMESTAMP ALCP_RELEASE_VERSION_STRING "AOCL-Crypto ${AOCL_RELEASE_VERSION} Build %Y%m%d")

    # Set Build OS
    IF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
        SET(ALCP_BUILD_OS_LINUX ON)
        SET(ALCP_BUILD_OS_WINDOWS OFF)
    ELSE()
        SET(ALCP_BUILD_OS_LINUX OFF)
        SET(ALCP_BUILD_OS_WINDOWS ON)
    ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")

    # Check Endian
    TEST_BIG_ENDIAN(ALCP_CONFIG_LITTLE_ENDIAN)
    INVERTBOOLEAN("ALCP_CONFIG_LITTLE_ENDIAN" ALCP_CONFIG_LITTLE_ENDIAN)

    # Keeping Command line variable same.
    SET(ALCP_ENABLE_AOCL_CPUID ${ENABLE_AOCL_CPUID})

    IF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
        SET(COMPILER_IS_CLANG ON)
    ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        SET(COMPILER_IS_GCC ON)
    ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        SET(COMPILER_IS_MSVC ON)
    ENDIF()

    # CONFIGURE A HEADER FILE TO PASS SOME OF THE CMAKE SETTINGS
    # TO THE SOURCE CODE
    IF(ALCP_BUILD_OS_LINUX)
        configure_file(${CMAKE_SOURCE_DIR}/include/alcp/config.h.in ${CMAKE_SOURCE_DIR}/include/config.h UNIX)
    ENDIF(ALCP_BUILD_OS_LINUX)
    IF(ALCP_BUILD_OS_WINDOWS)
        configure_file(${CMAKE_SOURCE_DIR}/include/alcp/config.h.in ${CMAKE_SOURCE_DIR}/include/config.h WIN32)
    ENDIF(ALCP_BUILD_OS_WINDOWS)
ENDFUNCTION()